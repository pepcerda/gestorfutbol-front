name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE_CONTENT }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
            export $(cat .env | xargs) && \
            docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jcerdar/gestorfutbol-frontend:latest .
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jcerdar/gestorfutbol-frontend:latest

      - name: Deploy to EC2 using Docker Compose
        run: |
         ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
         cd /opt/docker
         docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jcerdar/gestorfutbol-frontend:latest
         docker-compose stop frontend
         docker-compose up -d --no-deps frontend
         EOF

#     - name: Deploy to Amazon ECS
#       run: |
#        aws ecs update-service --cluster gestorfutbol --service frontend --force-new-deployment
